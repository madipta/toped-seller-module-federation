@use 'sass:map';
@use '@angular/material' as mat;

@mixin color($theme) {
  $color-config: mat.get-color-config($theme);
  $foreground-color-palette: map.get($color-config, foreground);
  $primary-color-palette: map.get($color-config, primary);
  $accent-color-palette: map.get($color-config, accent);

  ui-discussion {
    > mat-card mat-card-header {
      border-color: mat.get-color-from-palette(
        $foreground-color-palette,
        divider
      );

      button {
        border-color: mat.get-color-from-palette(
          $primary-color-palette,
          default
        );
        color: mat.get-color-from-palette(
          $primary-color-palette,
          darker
        );

        &:hover {
          border-color: mat.get-color-from-palette(
            $primary-color-palette,
            lighter
          ) !important;
        }
      }
    }
  }

  ui-thread {
    mat-card.outer mat-card-header {
      border-color: mat.get-color-from-palette(
        $foreground-color-palette,
        divider
      );
      color: mat.get-color-from-palette(
        $foreground-color-palette,
        hint-text
      );
    }

    .starter {
      .photo {
        color: mat.get-color-from-palette($foreground-color-palette, icon);
      }
    }

    .starter,
    .customer-reply,
    .seller-reply {
      .user {
        color: mat.get-color-from-palette(
          $foreground-color-palette,
          secondary-text
        );
      }
    }

    .customer-reply .photo {
      color: mat.get-color-from-palette($foreground-color-palette, icon);
    }

    .seller-reply .photo {
      color: mat.get-color-from-palette($foreground-color-palette, hint-text);
    }

    .replies {
      border-color: mat.get-color-from-palette(
        $foreground-color-palette,
        divider
      );
    }
  }
}
